<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hello.phonemanager.repository.ShopPhoneRepository">

    <!-- 휴대폰 목록 조회 -->
    <select id="findPhoneDetailsByShopId" parameterType="long" resultType="hello.phonemanager.domain.dto.ShopPhoneDetail">
        SELECT
            p.id AS phone_id,
            p.name,
            p.brand,
            p.price,
            p.release_date,
            sp.stock
        FROM phone p
                 JOIN shop_phone sp ON p.id = sp.phone_id
        WHERE sp.shop_id = #{shopId}
    </select>

    <!-- 휴대폰 추가 -->
    <insert id="insertPhoneToShop" parameterType="map">
        INSERT INTO shop_phone (shop_id, phone_id, stock, created_at)
        VALUES (#{shopId}, #{phoneId}, #{stock}, NOW())
    </insert>

    <insert id="insertPhone" parameterType="map">
        INSERT INTO shop_phone (shop_id, phone_id, stock, created_at)
        VALUES (#{shopId}, #{phoneId}, #{stock}, NOW())
    </insert>

    <!-- 재고 차감 (판매) -->
    <update id="decreaseStock" parameterType="map">
        UPDATE shop_phone
        SET stock = stock - #{quantity}
        WHERE shop_id = #{shopId}
          AND phone_id = #{phoneId}
          AND stock >= #{quantity}
    </update>

    <!-- 휴대폰 삭제 -->
    <delete id="removePhoneFromShop" parameterType="map">
        DELETE FROM shop_phone
        WHERE shop_id = #{shopId}
          AND phone_id = #{phoneId}
    </delete>

    <select id="findAll" resultType="hello.phonemanager.domain.Phone">
        SELECT id, name, brand, price, release_date
        FROM phone
    </select>

    <select id="findByShopIdAndPhoneId" parameterType="long" resultType="hello.phonemanager.domain.dto.ShopPhoneDetail">
        SELECT sp.phone_id, sp.stock, p.name, p.brand, p.price, p.release_date
        FROM shop_phone sp
                 JOIN phone p ON sp.phone_id = p.id
        WHERE sp.shop_id = #{shopId} AND sp.phone_id = #{phoneId}
    </select>

    <update id="updateStock" parameterType="map">
        UPDATE shop_phone
        SET stock = stock + #{stock}
        WHERE shop_id = #{shopId} AND phone_id = #{phoneId}
    </update>

    <delete id="deleteAll">
        delete from shop_phone;
    </delete>


</mapper>
